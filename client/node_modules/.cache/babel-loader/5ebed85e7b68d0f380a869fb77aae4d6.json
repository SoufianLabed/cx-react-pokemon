{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Users\\\\sosol\\\\Desktop\\\\Codeflix\\\\onecode\\\\client\\\\src\\\\PokemonDetail.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n\nclass PokemonDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id\n    };\n  }\n\n  async componentDidMount() {\n    // je vais chercher l'ensemble des info du pokemon correspondant à l'id \n    const response = await fetch(`http://localhost:4242/pokemons/${this.state.id}`); // Je vais chercher à quelle numéro dans le pokedex est representé par l'id \n\n    const response_num = await fetch(`http://localhost:4242/pokemons_dex/${this.state.id}`); // Je vais chercher toutes les attaques représenté par l'id\n\n    const response_attaques = await fetch(`http://localhost:4242/attaques/${this.state.id}`); //const responseAttaque = await fetch(`http://localhost:4242/pokemons/${this.state.id}`)\n\n    const data = await response.json();\n    const numero = await response_num.json();\n    const attaques = await response_attaques.json();\n    console.log(attaques);\n    this.setState({\n      attaques: attaques\n    });\n    this.setState({\n      pokemon: data\n    });\n    this.setState({\n      num: `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${numero[0].numéro}.png`\n    });\n  }\n\n  render() {\n    const classes = useStyles();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [this.state.pokemon ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.state.pokemon.map(pokemon => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [pokemon.nom, \" \", pokemon.nomja, \" \", pokemon.nom, pokemon.nom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOADING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }, this), this.state.attaques ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.state.attaques.map(attaques => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [attaques.puissance, \" \", attaques.niveau, \" \", attaques.nom, attaques.nom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOADING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default PokemonDetail;","map":{"version":3,"sources":["D:/Users/sosol/Desktop/Codeflix/onecode/client/src/PokemonDetail.js"],"names":["React","Paper","Grid","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","useStyles","table","minWidth","createData","name","calories","fat","carbs","protein","rows","PokemonDetail","Component","constructor","props","state","id","match","params","componentDidMount","response","fetch","response_num","response_attaques","data","json","numero","attaques","console","log","setState","pokemon","num","numéro","render","classes","map","nom","nomja","puissance","niveau"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\n\r\n\r\nclass PokemonDetail extends React.Component{\r\n\r\n  \r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n        id : this.props.match.params.id,\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync componentDidMount(){\r\n\r\n  // je vais chercher l'ensemble des info du pokemon correspondant à l'id \r\n  const response = await fetch(`http://localhost:4242/pokemons/${this.state.id}`)\r\n\r\n  // Je vais chercher à quelle numéro dans le pokedex est representé par l'id \r\n  const response_num = await fetch(`http://localhost:4242/pokemons_dex/${this.state.id}`)\r\n\r\n   // Je vais chercher toutes les attaques représenté par l'id\r\n  const response_attaques = await fetch(`http://localhost:4242/attaques/${this.state.id}`)\r\n\r\n\r\n  \r\n\r\n  //const responseAttaque = await fetch(`http://localhost:4242/pokemons/${this.state.id}`)\r\n  const data = await response.json()\r\n  const numero = await response_num.json()\r\n  const attaques = await response_attaques.json()\r\n  console.log(attaques)\r\n\r\n  this.setState({attaques : attaques})\r\n  this.setState({pokemon : data})\r\n  this.setState({num : `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${numero[0].numéro}.png`})\r\n \r\n\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n  render(){\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n  \r\n        <div className=\"row\">\r\n\r\n        {this.state.pokemon ? (\r\n          <div className=\"row\">\r\n            {this.state.pokemon.map(pokemon => (\r\n           \r\n              <div>{pokemon.nom} {pokemon.nomja} {pokemon.nom}{pokemon.nom}</div>\r\n              \r\n\r\n             \r\n            ))}\r\n          </div>\r\n        ) : (\r\n         <div>LOADING</div>\r\n        )}\r\n\r\n\r\n\r\n\r\n        {this.state.attaques ? (\r\n          <div className=\"row\">\r\n            {this.state.attaques.map(attaques => (\r\n           \r\n              <div>{attaques.puissance} {attaques.niveau} {attaques.nom}{attaques.nom}</div>\r\n              \r\n\r\n             \r\n            ))}\r\n          </div>\r\n        ) : (\r\n         <div>LOADING</div>\r\n        )}\r\n\r\n\r\n\r\n\r\n           <img src={this.state.num} />\r\n         \r\n\r\n        </div>\r\n      \r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\nexport default PokemonDetail;"]},"metadata":{},"sourceType":"module"}