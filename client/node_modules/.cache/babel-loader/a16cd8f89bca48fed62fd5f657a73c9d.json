{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Users\\\\sosol\\\\Desktop\\\\poe\\\\client\\\\src\\\\PokemonDetail.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './PokemonDetail.css';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePokemon from './Components/TablePokemon';\nimport CardAttaque from './Components/CardAttaque';\nimport Favicon from 'react-favicon';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nclass PokemonDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id\n    };\n  }\n\n  async componentDidMount() {\n    // je vais chercher l'ensemble des info du pokemon correspondant à l'id \n    const response = await fetch(`http://localhost:4242/pokemons/${this.state.id}`); // Je vais chercher à quelle numéro dans le pokedex est representé par l'id \n\n    const response_num = await fetch(`http://localhost:4242/pokemons_dex/${this.state.id}`); // Je vais chercher toutes les attaques représenté par l'id\n\n    const response_attaques = await fetch(`http://localhost:4242/attaques/${this.state.id}`); //const responseAttaque = await fetch(`http://localhost:4242/pokemons/${this.state.id}`)\n\n    const data = await response.json();\n    const numero = await response_num.json();\n    const attaques = await response_attaques.json();\n    console.log(attaques);\n    this.setState({\n      attaques: attaques\n    });\n    this.setState({\n      pokemon: data\n    });\n    this.setState({\n      num: `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${numero[0].numéro}.png`\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all\",\n      children: [/*#__PURE__*/_jsxDEV(Favicon, {\n        url: \"http://oflisback.github.io/react-favicon/public/img/github.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imgpoke\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.num\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), this.state.pokemon ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poketab\",\n        children: this.state.pokemon.map(pokemon => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doubletab\",\n          children: [/*#__PURE__*/_jsxDEV(TablePokemon, {\n            champs1: \"couleur\",\n            champs2: \"espece\",\n            champs3: \"type\",\n            champs4: \"type2\",\n            champs5: \"taille\",\n            champs6: \"poids\",\n            champs7: \"forme\",\n            rep1: pokemon.couleur,\n            rep2: pokemon.espece,\n            rep3: pokemon.type1,\n            rep4: pokemon.type2,\n            rep5: pokemon.taille,\n            rep6: pokemon.poids,\n            rep7: pokemon.forme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TablePokemon, {\n            champs1: \"Pokemon\",\n            champs2: \"Nom FR\",\n            champs3: \"Nom EN\",\n            champs4: \"NOM DE\",\n            champs5: \"NOM TM\",\n            champs6: \"NOM JA\",\n            champs7: \"oeuf pas\",\n            rep1: pokemon.pokemon,\n            rep2: pokemon.nom,\n            rep3: pokemon.nomen,\n            rep4: pokemon.nomde,\n            rep5: pokemon.nomtm,\n            rep6: pokemon.nomja,\n            rep7: pokemon.oeufpas\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOADING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 10\n      }, this), this.state.attaques ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list_cardA\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.attaques.map(attaques => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardA\",\n            children: /*#__PURE__*/_jsxDEV(CardAttaque, {\n              puissance: attaques.puissance,\n              nom: attaques.nom,\n              niveau: attaques.niveau,\n              precision: attaques.precision,\n              pp: attaques.pp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOADING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default PokemonDetail;","map":{"version":3,"sources":["D:/Users/sosol/Desktop/poe/client/src/PokemonDetail.js"],"names":["React","Paper","Grid","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePokemon","CardAttaque","Favicon","useStyles","table","minWidth","PokemonDetail","Component","constructor","props","state","id","match","params","componentDidMount","response","fetch","response_num","response_attaques","data","json","numero","attaques","console","log","setState","pokemon","num","numéro","render","map","couleur","espece","type1","type2","taille","poids","forme","nom","nomen","nomde","nomtm","nomja","oeufpas","puissance","niveau","precision","pp"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './PokemonDetail.css'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePokemon from './Components/TablePokemon'\r\nimport CardAttaque from './Components/CardAttaque'\r\nimport Favicon from 'react-favicon';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nclass PokemonDetail extends React.Component{\r\n\r\n  \r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n        id : this.props.match.params.id,\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync componentDidMount(){\r\n\r\n  // je vais chercher l'ensemble des info du pokemon correspondant à l'id \r\n  const response = await fetch(`http://localhost:4242/pokemons/${this.state.id}`)\r\n\r\n  // Je vais chercher à quelle numéro dans le pokedex est representé par l'id \r\n  const response_num = await fetch(`http://localhost:4242/pokemons_dex/${this.state.id}`)\r\n\r\n   // Je vais chercher toutes les attaques représenté par l'id\r\n  const response_attaques = await fetch(`http://localhost:4242/attaques/${this.state.id}`)\r\n\r\n\r\n  \r\n\r\n  //const responseAttaque = await fetch(`http://localhost:4242/pokemons/${this.state.id}`)\r\n \r\n  const data = await response.json()\r\n  const numero = await response_num.json()\r\n  const attaques = await response_attaques.json()\r\n  console.log(attaques)\r\n\r\n  this.setState({attaques : attaques})\r\n  this.setState({pokemon : data})\r\n  this.setState({num : `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${numero[0].numéro}.png`})\r\n \r\n\r\n  \r\n}\r\n\r\n\r\n\r\n  render(){\r\n\r\n    \r\n\r\n    return (\r\n  \r\n        <div className=\"all\">\r\n         <Favicon url=\"http://oflisback.github.io/react-favicon/public/img/github.ico\" />\r\n     \r\n        <div className=\"imgpoke\">\r\n         \r\n          <img src={this.state.num}  />\r\n        </div>\r\n          \r\n        {this.state.pokemon ? (\r\n\r\n          <div className=\"poketab\">\r\n\r\n               \r\n\r\n            {this.state.pokemon.map(pokemon => (\r\n           \r\n            \r\n                <div className=\"doubletab\">\r\n               \r\n                <TablePokemon \r\n                      \r\n                      champs1={\"couleur\"} \r\n                      champs2={\"espece\"} \r\n                      champs3={\"type\"} \r\n                      champs4={\"type2\"} \r\n                      champs5={\"taille\"} \r\n                      champs6={\"poids\"} \r\n                      champs7={\"forme\"} \r\n                      \r\n                      rep1={pokemon.couleur} \r\n                      rep2={pokemon.espece} \r\n                      rep3={pokemon.type1} \r\n                      rep4={pokemon.type2} \r\n                      rep5={pokemon.taille} \r\n                      rep6={pokemon.poids} \r\n                      rep7={pokemon.forme} \r\n                    />\r\n            \r\n                  \r\n                      \r\n                <TablePokemon \r\n\r\n\r\n                      champs1={\"Pokemon\"} \r\n                      champs2={\"Nom FR\"} \r\n                      champs3={\"Nom EN\"} \r\n                      champs4={\"NOM DE\"} \r\n                      champs5={\"NOM TM\"} \r\n                      champs6={\"NOM JA\"} \r\n                      champs7={\"oeuf pas\"} \r\n                      \r\n                      rep1={pokemon.pokemon} \r\n                      rep2={pokemon.nom} \r\n                      rep3={pokemon.nomen} \r\n                      rep4={pokemon.nomde} \r\n                      rep5={pokemon.nomtm} \r\n                      rep6={pokemon.nomja} \r\n                      rep7={pokemon.oeufpas}        \r\n                    />\r\n                    \r\n                    </div>\r\n                    \r\n\r\n                    \r\n                    \r\n         \r\n              \r\n\r\n             \r\n            ))}\r\n          </div>\r\n        ) : (\r\n         <div>LOADING</div>\r\n        )}\r\n\r\n\r\n\r\n       \r\n        {this.state.attaques ? (\r\n         <div className=\"list_cardA\">\r\n          <div className=\"row\">\r\n            {this.state.attaques.map(attaques => (\r\n                <div className=\"cardA\">\r\n                  <CardAttaque puissance={attaques.puissance} nom={attaques.nom} niveau={attaques.niveau} precision={attaques.precision} pp={attaques.pp} />\r\n                </div>\r\n            ))}\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n        ) : (\r\n         <div>LOADING</div>\r\n        )}\r\n\r\n        \r\n        \r\n\r\n\r\n        </div>\r\n      \r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\nexport default PokemonDetail;"]},"metadata":{},"sourceType":"module"}